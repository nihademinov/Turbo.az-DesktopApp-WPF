<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
    <!--Butun Tinleri Dairevi Olan Combobox Dizayni-->

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Tag" Value="Ok"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            Background="White" 
                            BorderBrush="#FFACACAC" 
                            BorderThickness="1" 
                            SnapsToDevicePixels="true"
                            CornerRadius="10">
                        
                        <!-- Combobox CornerRadius -->
                        <Border x:Name="splitBorder" 
                                BorderBrush="Transparent" 
                                BorderThickness="1"
                                HorizontalAlignment="Right" 
                                Margin="0"
                                Width="25"
                                Height="25"
                                SnapsToDevicePixels="true">
                            <Path x:Name="arrow" 
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
                                  Fill="Gray"
                                  Stretch="Fill" 
                                  HorizontalAlignment="Center" 
                                  Width="10"
                                  Height="8" 
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="BorderThickness" TargetName="templateRoot" Value="0.4"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="Red"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>

                            <Setter Property="Cursor" TargetName="templateRoot" Value="Hand"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="LightGray"/>



                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>



                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AllRoundedCombobox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" 
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="true" 
                               Grid.ColumnSpan="2" 
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                               Margin="1" 
                               Placement="Bottom" 
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome x:Name="shadow" 
                                                          Color="LightGray" 
                                                          
                                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                          CornerRadius="10">
                                <Border x:Name="dropDownBorder" 
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                                        BorderBrush="LightGray"
                                        BorderThickness="1"
                                        CornerRadius="10,0,0,10"
                                        Margin="0,5,0,0"
                                        Cursor="Hand">
                                    <ScrollViewer x:Name="DropDownScrollViewer" Foreground="Black">
                                        <Grid x:Name="grid"  
                                              RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas"
                                                    
                                                    HorizontalAlignment="Left" 
                                                    Height="0" 
                                                    VerticalAlignment="Top" 
                                                    Width="0">
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                                           
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            </ItemsPresenter>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" 
                                     
                                      Background="{TemplateBinding Background}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxToggleButton}"
                                      />
                        <Label x:Name="Watermark"
                               Foreground="Gray"
                               Margin="5 5 0 0"
                               Visibility="Visible"
                               Content="{TemplateBinding Tag}"
                               FontSize="12"/>
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--  Yalniz Sol tinleri dairevi olan combobox dizayni-->

    <Style x:Key="ComboBoxToggleButton1" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Tag" Value="Ok"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            Background="White" 
                            BorderBrush="#FFACACAC" 
                            BorderThickness="1" 
                            SnapsToDevicePixels="true"
                            CornerRadius="10,0,0,10">
                        <!-- Combobox CornerRadius -->

                        <Border x:Name="splitBorder" 
                                BorderBrush="Transparent" 
                                BorderThickness="1" 
                                HorizontalAlignment="Right" 
                                Margin="0"
                                Width="25"
                                Height="25"
                                SnapsToDevicePixels="true">
                            <Path x:Name="arrow" 
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
                                  Fill="Gray"
                                  Stretch="Fill"
                                  HorizontalAlignment="Center" 
                                  Width="10"
                                  Height="8" 
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="BorderThickness" TargetName="templateRoot" Value="0.4"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="Red"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>

                            <Setter Property="Cursor" TargetName="templateRoot" Value="Hand"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="LightGray"/>



                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>



                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftRoundedCombobox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" 
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="true" 
                               Grid.ColumnSpan="2" 
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                               Margin="1" 
                               Placement="Bottom" 
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome x:Name="shadow" 
                                                          Color="LightGray" 
                                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                          CornerRadius="10,0,0,10">
                                <Border x:Name="dropDownBorder" 
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                                        BorderBrush="LightGray"
                                        BorderThickness="1"
                                        CornerRadius="10,0,0,10"
                                        Margin="0,5,0,0"
                                        Cursor="Hand">
                                    <ScrollViewer x:Name="DropDownScrollViewer" Foreground="Black">
                                        <Grid x:Name="grid" 
                                              RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" 
                                                    HorizontalAlignment="Left" 
                                                    Height="0" 
                                                    VerticalAlignment="Top" 
                                                    Width="0">
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            </ItemsPresenter>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton1" 
                                      Background="{TemplateBinding Background}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxToggleButton1}"
                                      />
                        <Label x:Name="Watermark"
                               Foreground="Gray"
                               Margin="5 5 0 0"
                               Visibility="Visible"
                               Content="{TemplateBinding Tag}"
                               FontSize="12"/>
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Yalniz Sag Kuncleri Dairevi Olan COmbobox Dizayni-->


    <Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Tag" Value="Ok"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            Background="White" 
                            BorderBrush="#FFACACAC" 
                            BorderThickness="1" 
                            SnapsToDevicePixels="true"
                            CornerRadius="0,10,10,0">
                        <!-- Combobox CornerRadius -->

                        <Border x:Name="splitBorder" 
                                BorderBrush="Transparent" 
                                BorderThickness="1" 
                                HorizontalAlignment="Right" 
                                Margin="0"
                                Width="25"
                                Height="25"
                                SnapsToDevicePixels="true">
                            <Path x:Name="arrow" 
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
                                  Fill="Gray"
                                  Stretch="Fill"
                                  HorizontalAlignment="Center" 
                                  Width="10"
                                  Height="8" 
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="BorderThickness" TargetName="templateRoot" Value="0.4"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="Red"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>

                            <Setter Property="Cursor" TargetName="templateRoot" Value="Hand"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="LightGray"/>



                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                        </MultiDataTrigger>



                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightRoundedCombobox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" 
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="true" 
                               Grid.ColumnSpan="2" 
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                               Margin="1" 
                               Placement="Bottom" 
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome x:Name="shadow" 
                                                          Color="LightGray" 
                                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                          CornerRadius="10,0,0,10">
                                <Border x:Name="dropDownBorder" 
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                                        BorderBrush="LightGray"
                                        BorderThickness="1"
                                        CornerRadius="10,0,0,10"
                                        Margin="0,5,0,0"
                                        Cursor="Hand">
                                    <ScrollViewer x:Name="DropDownScrollViewer" Foreground="Black">
                                        <Grid x:Name="grid" 
                                              RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" 
                                                    HorizontalAlignment="Left" 
                                                    Height="0" 
                                                    VerticalAlignment="Top" 
                                                    Width="0">
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            </ItemsPresenter>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton2" 
                                      Background="{TemplateBinding Background}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxToggleButton2}"
                                      />
                        <Label x:Name="Watermark"
                               Foreground="Gray"
                               Margin="5 5 0 0"
                               Visibility="Visible"
                               Content="{TemplateBinding Tag}"
                               FontSize="12"/>
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>